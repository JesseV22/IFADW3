{% extends "templates/base.html" %}
{% block content %}
<div x-data="menuForm()">
  <ol class="breadcrumb mb-2">
    <li class="breadcrumb-item active">{{ title }}</li>
  </ol>
  <div class="row">
    <div class="col-12">
      <div class="card-header">
        {{ title }}
      </div>
      <div class="card-body">
        <div class="">
          <form @submit.prevent="submitForm">
            <div class="row">
              <div class="col-md-3">
                <div class="form-group">
                  <label for="codigo">Código</label>
                  <input type="text" class="form-control" id="codigo" x-model="form.codigo" required="required">
                </div>
              </div>
              <div class="col-md-3">
                <div class="form-group">
                  <label for="descricao">Descrição</label>
                  <input type="text" class="form-control" id="descricao" x-model="form.descricao">
                </div>
              </div>
              <div class="col-md-3">
                <div class="form-group">
                  <label for="nivel">Nível</label>
                  <input type="number" class="form-control" id="nivel" x-model="form.nivel">
                </div>
              </div>
            </div>
            <button type="button" @click="insertForm()" class="btn btn-primary mt-4">Salvar</button>
            <a href="/menu/manutMenu" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
          </form>
          <div class="mt-3">
            <template x-if="message">
              <div :class="messageClass" x-text="message"></div>
            </template>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  window.onload = function () {
    windowOnLoad();
    const localErro = "{{ erro }}";
    if (localErro != "") {
      alert("[vwMenu|onload]Servidor retornou o erro:" + localErro);
    }
    $("#codigo").focus();
  };
  function menuForm() {
    return {
      form: {
        codigo: '',
        descricao: '',
        nivel: '',
        deleted: false
      },
      message: '',
      messageClass: '',
      async insertForm() {
        try {
          console.log("Valor na página:", JSON.stringify(this.form))
          const response = await fetch('/menu/insertMenu', {
            method: 'POST',
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify(this.form)
          });
          const result = await response.json();
          if (result.status == "ok") {
            alert("Menu cadastrado com sucesso");
            this.resetForm();
          } else {
            const errorData = result.status;
            this.message = `Erro! Não foi possível cadastrar o menu devido ao erro: ${errorData}`;
            this.messageClass = 'alert alert-danger';
          }
        } catch (error) {
          this.message = `Erro de conexão: ${error.message}`;
          this.messageClass = 'alert alert-danger';
        }
      },
      resetForm() {
        this.form = {
          codigo: '',
          descricao: '',
          nivel: '',
          deleted: false
        };
        this.message = false;
      }
    };
  }
</script>
{% endblock %}
